rabbitmq:
	debugger: false

	connection:
		foo_connection:
			host: rabbitmq
			port: 5672
			user: guest
			password: guest
			vhost: '/'

		default:
			user: guest
			password: guest


	producers:
		foo_producer:
			connection: foo_connection
			exchange:
				name: foo_exchange
				type: direct
				passive: true
				durable: false
				autoDelete: true
				internal: true
				nowait: true
				arguments: null
				ticket: null

		default_producer:
			exchange:
				name: default_exchange
				type: direct


	consumers:
		foo_consumer:
			connection: foo_connection
			exchange:
				name: foo_exchange
				type: direct
				passive: true
				durable: true
				autoDelete: true
				internal: true
				nowait: true
				arguments: null
				ticket: null
			queue:
				name: foo_queue
				passive: true
				durable: false
				exclusive: true
				autoDelete:  true
				nowait: true
				arguments: null
				ticket: null
				routing_keys:
					- 'android.#.upload'
					- 'iphone.upload'
			callback: KdybyTests\RabbitMq\Mock\Callback()

		default_consumer:
			exchange:
				name: default_exchange
				type: direct
			queue:
				name: default_queue
			callback: [KdybyTests\RabbitMq\Mock\Callback, staticProcess]

		qos_test_consumer:
			connection: foo_connection
			exchange:
				name: foo_exchange
				type: direct
			queue:
				name: foo_queue
			qos:
				prefetchSize: 1024
				prefetchCount:  1
				global: true
			callback: [@collecting_callback, process]

		multi_test_consumer:
			connection: foo_connection
			exchange:
				name: foo_multiple_exchange
				type: direct
			queues:
				multi-test-1:
					name: multi_test_1
					callback: [@KdybyTests\RabbitMq\Mock\Callback, process]
				multi-test-2:
					name: foo_bar_2
					passive: true
					durable: false
					exclusive: true
					autoDelete:  true
					nowait: true
					arguments: null
					ticket: null
					routing_keys:
						- 'android.upload'
						- 'iphone.upload'
					callback: KdybyTests\RabbitMq\Mock\Callback()

		foo_anon_consumer:
			connection: foo_connection
			exchange:
				name: foo_anon_exchange
				type: direct
				passive: true
				durable: false
				autoDelete:  true
				internal: true
				nowait: true
				arguments: null
				ticket: null
			callback: KdybyTests\RabbitMq\Mock\Callback()

		default_anon_consumer:
			exchange:
				name: default_anon_exchange
				type: direct
			callback: KdybyTests\RabbitMq\Mock\Callback()


	rpcClients:
		foo_client:
			connection: foo_connection

		default_client:


	rpcServers:
		foo_server:
			connection: foo_connection
			callback: KdybyTests\RabbitMq\Mock\Callback()

		default_server:
			callback: KdybyTests\RabbitMq\Mock\Callback()


services:
	collecting_callback: KdybyTests\RabbitMq\Mock\Callback
